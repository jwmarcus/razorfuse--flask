upstream razorfuse-site {
    server unix:/tmp/razorfuse-uwsgi.sock;
}

server {
    # redirect the non-WWW to WWW
    server_name  razorfuse.com;
    return 301 $scheme://www.razorfuse.com$request_uri;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/razorfuse.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/razorfuse.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    server_name  www.razorfuse.com;

    location / {
        root   /var/www/razorfuse.com;
        index  index.html index.htm;
    }

    location /razorfuse-flask {
        uwsgi_pass razorfuse-site;
        include /etc/nginx/uwsgi_params;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/razorfuse.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/razorfuse.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = razorfuse.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen       80;
    server_name  razorfuse.com;
    return 404; # managed by Certbot


}

server {
    if ($host = www.razorfuse.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen       80;
    server_name  www.razorfuse.com;
    return 404; # managed by Certbot


}